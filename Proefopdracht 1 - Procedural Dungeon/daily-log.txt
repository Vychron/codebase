Dagelijkse Log:

--------
Vrijdag - Week 2
--------

--------
Donderdag - Week 2
--------

--------
Woensdag - Week 2
--------

--------
Dinsdag - Week 2
--------

--------
Maandag - Week 2
--------

--------
Vrijdag - Week 1
--------

--------
Donderdag - Week 1
--------
Heb wat rond zitten spelen met de camera en heb een zoom-in gemaakt tijdens het genereren van de map.
Deze zoom-in is aangevuld met een fade-out van het licht, waarna deze vervangen wordt met een spotlicht om de speler heen.
De speler kan rondlopen met WASD en de pijltoetsen.
De speler kan schieten door de linker muisknop ingedrukt te houden.
Voor zuinig gebruik heb ik opgezocht hoe object pooling werkt³, omdat ik het concept wel kende, maar niet wist hoe ik het uit moet voeren.

--------
Woensdag - Week 1
--------
De Array waarin de map gecreëerd wordt is static gemaakt, zodat deze volledig toegankelijk is voor de generatoren van kamers en gangen. Een snelle Google search voor pauzeren² heeft mij geleerd hoe update tijd te beïnvloeden is zonder een UI als een pauzescherm mee te belemmeren.
Een pauzemenu is toegevoegd (escape) om natuurlijk te pauzeren en te hervatten, en om opnieuw te starten. Een optie voor afsluiten ziet er overbodig uit gezien het eindproduct in WebGL formaat beschikbaar gesteld wordt.

--------
Dinsdag - Week 1
--------
Bij het plaatsen van de gangen heb ik een extra controle toegevoegd om te kijken hoe dicht deze op de rand van de map zit: wanneer een kamer te dicht bij een rand zit, kan er alleen een gang in de tegengestelde richting aangemaakt worden, waardoor deze nooit buiten de randen van de map kunnen komen.
Verder zijn er 2 statische variabelen aangemaakt bedoeld om de uitbreiding van de map te beperken, deze variabelen beïnvloeden de grootte van de kanzen voor het plaatsen van nieuwe kamers en gangen, en krimpen bij elke kamer die geplaatst wordt. Zo wordt de map (meestal) groot genoeg om te vullen met uitdaging, maar zal deze vrijwel nooit te klein zijn. Een minimale kans bestaat nog altijd dat er geen gangen geplaatst worden.
Een statische Input Manager is aangemaakt om alle input naast de muis op te vangen.

--------
Maandag - Week 1
--------
Als eerste heb uit eigen kennis geprobeerd een algoritme te schrijven voor het procedureel genereren van de map,
wat (zoals ik verwachtte) niet zo soepel liep als ik hoopte.
Vervolgens ben ik rond gaan snuffelen op internet en kwam er al direct achter dat mijn aanpak erg afweek van alleen al de thumbnails van tutorials.
Om een idee te krijgen heb ik een van de video's geopend¹ en heb ik mij geïnformeerd over het principe van het gebruikte algoritme,
zonder naar verdere uitleg te kijken of luisteren omdat ik daar te eigenwijs voor ben en het eerst zelf wil uitvogelen en uitleg als back-up plan wil gebruiken.
Wat ik heb begrepen van het principe is dat er vanuit één startpunt eerst een kamer gegenereerd wordt, en vervolgens daarop uitgebreid wordt, dus deze kennis nieuwe kennis heb ik getest door een veld te genereren met middenin een kamer, die aan elke kant om zich heen een gang aan kan maken met een semi-willekeurige lengte, en aan het einde vervolgens een kans heeft om een nieuwe kamer te genereren, door het zelfde algoritme te gebruiken als de eerste kamer.
Hierdoor breidt de map die gemaakt wordt zich willekeurig uit.
Hoofdzaak is nu om de grootte van de map te beperken tot binnen het veld.

Bronnen:
¹https://youtu.be/wnoLaui3uO4
²https://forum.unity.com/threads/pausing-a-game-without-settiing-timescale-to-0.55395/
³https://youtu.be/9-zDOJllPZ8
